// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// gauss_loglik
arma::vec gauss_loglik(arma::mat y, arma::mat Sigma, arma::mat Sigma_i);
RcppExport SEXP _bvartools_gauss_loglik(SEXP ySEXP, SEXP SigmaSEXP, SEXP Sigma_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_i(Sigma_iSEXP);
    rcpp_result_gen = Rcpp::wrap(gauss_loglik(y, Sigma, Sigma_i));
    return rcpp_result_gen;
END_RCPP
}
// posterior_normal
arma::vec posterior_normal(arma::mat y, arma::mat x, arma::mat Sigma_i, arma::vec bprior, arma::mat Vprior_i);
RcppExport SEXP _bvartools_posterior_normal(SEXP ySEXP, SEXP xSEXP, SEXP Sigma_iSEXP, SEXP bpriorSEXP, SEXP Vprior_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_i(Sigma_iSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bprior(bpriorSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Vprior_i(Vprior_iSEXP);
    rcpp_result_gen = Rcpp::wrap(posterior_normal(y, x, Sigma_i, bprior, Vprior_i));
    return rcpp_result_gen;
END_RCPP
}
// posterior_normal_sur
arma::vec posterior_normal_sur(arma::mat y, arma::mat Z, arma::mat Sigma_i, arma::vec bprior, arma::mat Vprior_i);
RcppExport SEXP _bvartools_posterior_normal_sur(SEXP ySEXP, SEXP ZSEXP, SEXP Sigma_iSEXP, SEXP bpriorSEXP, SEXP Vprior_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_i(Sigma_iSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bprior(bpriorSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Vprior_i(Vprior_iSEXP);
    rcpp_result_gen = Rcpp::wrap(posterior_normal_sur(y, Z, Sigma_i, bprior, Vprior_i));
    return rcpp_result_gen;
END_RCPP
}
// post_wishart
arma::mat post_wishart(arma::mat y, int df_post, arma::mat V_prior);
RcppExport SEXP _bvartools_post_wishart(SEXP ySEXP, SEXP df_postSEXP, SEXP V_priorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type df_post(df_postSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V_prior(V_priorSEXP);
    rcpp_result_gen = Rcpp::wrap(post_wishart(y, df_post, V_prior));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bvartools_gauss_loglik", (DL_FUNC) &_bvartools_gauss_loglik, 3},
    {"_bvartools_posterior_normal", (DL_FUNC) &_bvartools_posterior_normal, 5},
    {"_bvartools_posterior_normal_sur", (DL_FUNC) &_bvartools_posterior_normal_sur, 5},
    {"_bvartools_post_wishart", (DL_FUNC) &_bvartools_post_wishart, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_bvartools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
