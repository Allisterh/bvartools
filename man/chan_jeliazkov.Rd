% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{chan_jeliazkov}
\alias{chan_jeliazkov}
\title{Algorithm of Chan and Jeliazkov (2009)}
\usage{
chan_jeliazkov(y, z, sigma_i, q_i, a0)
}
\arguments{
\item{y}{a \eqn{K \times T} matrix of endogenous variables.}

\item{z}{a \eqn{KT \times M} matrix of explanatory variables.}

\item{sigma_i}{the inverse of the constant \eqn{K \times K} error variance-covariance matrix.
For time varying variance-covariance matrices a \eqn{KT \times K} can be specified.}

\item{q_i}{the inverse of the constant \eqn{M \times M} coefficient variance-covariance matrix.
For time varying variance-covariance matrices a \eqn{MT \times M} can be specified.}

\item{a0}{an M-dimensional vector of initial states.}
}
\value{
A \eqn{M \times T} matrix of state vector draws.
}
\description{
A simplified implementation of the algorithm of Chan and Jeliazkov (2009).
}
\details{
The function uses a simplified version of the algorithm of of Chan and Jeliazkov (2009)
to produce a draw of the state vector \eqn{a_t} for \eqn{t = 1,...,T} for a state space model
with measurement equation
\deqn{y_t = Z_t a_t + u_t}
and transition equation 
\deqn{a_{t} = a_{t - 1} + v_t,}
where \eqn{u_t \sim N(0, \Sigma_{t})} and \eqn{v_t \sim N(0, Q_{t})}.
\eqn{y_t} is a K-dimensional vector of endogenous variables and
\eqn{Z_t = z_t^{\prime} \otimes I_K} is a \eqn{K \times M} matrix of regressors with
\eqn{z_t} as a vector of regressors.

The implementation follows the depiction in chapter 20 of Chan, Koop, Poirier and Tobias (2019).
}
\examples{
# Load data and transform it
data("e1")
e1 <- diff(log(e1[, c("cons", "income")]))

# Create model
model_data <- gen_var(e1, p = 2, deterministic = "const")
y <- matrix(model_data$Y["cons", ], 1)
x <- rbind(model_data$Y["income", ], model_data$Z)

tt <- NCOL(y) # Number of periods
k <- NROW(y) # Number of endogenous variables

z <- kronecker(t(x), diag(1, k)) # Matrix of regressors

# Initial values
b0 <- matrix(tcrossprod(y, x) \%*\% solve(tcrossprod(x)))
epsilon <- matrix(matrix(y) - z \%*\% b0, k)
sigma <- tcrossprod(epsilon) / tt
sigma_i <- solve(sigma)
q_i <- diag(100, k * nrow(x))

b <- chan_jeliazkov(y = y, z = z, sigma_i = sigma_i,
                    q_i = q_i, a0 = b0)

}
\references{
Chan, J. C. C., & Jeliazkov, I. (2009). Efficient simulation and integrated likelihood
estimation in state space models. \emph{International Journal of Mathematical Modelling
and Numerical Optimisation, 1}(1/2), 101--120. \url{https://doi.org/10.1504/ijmmno.2009.030090}

Chan, J., Koop, G., Poirier, D. J., & Tobias J. L. (2019). \emph{Bayesian econometric methods}
(2nd ed.). Cambridge: Cambridge University Press.
}
